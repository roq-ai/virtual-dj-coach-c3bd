generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String            @unique @db.VarChar(255)
  administrator_id String            @db.Uuid
  created_at       DateTime          @default(now()) @db.Timestamp(6)
  updated_at       DateTime          @default(now()) @db.Timestamp(6)
  user             user              @relation(fields: [administrator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  course_category  course_category[]
}

model course {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String            @db.VarChar(255)
  description     String            @db.VarChar(255)
  instructor_id   String            @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  user            user              @relation(fields: [instructor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  course_category course_category[]
  material        material[]
}

model course_category {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  course_id   String   @db.Uuid
  category_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  category    category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  course      course   @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model material {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title              String   @db.VarChar(255)
  content            String   @db.VarChar(255)
  course_id          String   @db.Uuid
  content_creator_id String   @db.Uuid
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  user               user     @relation(fields: [content_creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  course             course   @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model school {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  category    category[]
  course      course[]
  material    material[]
  school      school[]
}
